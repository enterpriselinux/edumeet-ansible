---
- name: Upgrade all packages to the latest version
  become: true
  apt:
    name: "*"
    state: latest

- name: Remove useless packages from the cache
  become: true
  apt:
    autoclean: true

- name: Remove dependencies that are no longer required
  become: true
  apt:
    autoremove: true

- name: install packages
  become: true
  apt:
    name: ['git', 'vim', 'ferm', 'fail2ban', 'ntp']
    state: latest
    update_cache: true

- name: ferm config
  become: true
  copy:
    src: ferm.conf
    dest: /etc/ferm/ferm.conf
  notify:
    - restart ferm
    - restart docker

- name: reload meta
  meta: flush_handlers

- name: install python-docker package
  become: true
  apt:
    name: ["python3-docker", "python3-pip"]
    state: latest

- name: install python-setuptools package
  become: true
  pip:
    name: "setuptools"

- name: install python-docker package
  become: true
  pip:
    name: "docker-compose"

- name: check if an old deployment directory exists
  stat:
    path: "{{ deployment_directory}}"
  register: oldedumeet_dir

- name: tear down existing services
  become: true
  docker_compose:
    project_src: "{{ deployment_directory }}"
    state: absent
  when: oldedumeet_dir.stat.exists and oldedumeet_dir.stat.isdir
  ignore_errors: true

- name: "cleanup: copy old directory to .old"
  become: true
  copy:
    dest: "{{ deployment_directory }}.old"
    src: "{{ deployment_directory }}"
    remote_src: true
  when: oldedumeet_dir.stat.exists and oldedumeet_dir.stat.isdir

- name: "cleanup: delete old deployment directory"
  become: true
  file:
    state: absent
    path: "{{ deployment_directory }}"
  when: oldedumeet_dir.stat.exists and oldedumeet_dir.stat.isdir

- name: make sure user home directory exists
  become: true
  file:
    path: "/home/{{ ansible_user }}"
    state: directory

- name: "git clone edumeet branch {{ edumeet_branch }}"
  git:
    repo: 'https://github.com/enterpriselinux/edumeet-docker.git'
    dest: "{{ deployment_directory }}"
    version: "{{ edumeet_branch }}"

# Customize Config

# Cert
- name: Copy letsencrypt cert
  become: true
  copy:
    src: "/etc/letsencrypt/live/{{ ansible_fqdn }}/{{ item.src }}"
    dest: "{{ deployment_directory}}/certs/{{ item.dst }}"
    remote_src: true
  with_items: "{{ certfiles }}"
  when: local_cert != true

- name: Copy local cert
  become: true
  copy:
    src: "{{ item.src }}"
    dest: "{{ deployment_directory}}/certs/{{ item.dst }}"
    remote_src: true
  with_items: "{{ local_certfiles }}"
  when: local_cert == true

# Logo
- name: copy logo
  copy:
    src: logo.svg
    dest: "{{ deployment_directory}}/images/logo.svg"

- name: App Config
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: root
    group: root
    mode: "0640"
    force: true
  with_items:
    - {
      src: "{{ config_template_version }}/app-config.j2",
      dst: "{{ deployment_directory }}/configs/app/config.js"
    }
    - {
      src: "{{ config_template_version }}/server-config.j2",
      dst: "{{ deployment_directory }}/configs/server/config.js"
    }

# pull lastest image
- name: "pull docker image edumeet/edumeet:{{edumeet_tag}}"
  become: true
  docker_image:
    name: cybermeet/cybermeet
    tag: "{{edumeet_tag}}"
    source: pull
    force_source: true
# Run container
- name: Create and start services
  become: true
  docker_compose:
    project_src: "{{ deployment_directory}}"
  register: output

# - debug:
#     var: output

- name: Add cert copy script to renew post hook
  become: true
  template:
    src: cert-renew.j2
    dest: /etc/letsencrypt/renewal-hooks/post/edumeet.sh
    owner: root
    group: root
    mode: "0755"
  when: local_cert != true
